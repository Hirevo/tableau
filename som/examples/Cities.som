Cities = (
    run = (
        | table rows cells data |
        table := Table new.

        data := #(
            #('Tokyo'       'Japan'          '139.6917'  '35.6895')
            #('Jakarta'     'Indonesia'      '106.8650'  '-6.1751')
            #('Delhi'       'India'           '77.1025'  '28.7041')
            #('Seoul'       'South Korea'    '126.9780'  '37.5665')
            #('Paris'       'France'           '2.3522'  '48.8566')
            #('London'      'United Kingdom'  '-0.1276'  '51.5072')
            #('Beijing'     'China'          '116.4074'  '39.9042')
            #('New York'    'United States'  '-74.0060'  '40.7128')
            #('Sao Paulo'   'Brazil'         '-46.6333' '-23.5505')
            #('Mexico City' 'Mexico'         '-99.1332'  '19.4326')
            #('Mumbai'      'India'           '72.8777'  '19.0760')
            #('Los Angeles' 'United States' '-118.2437'  '34.0522')
            #('Istanbul'    'Turkey'          '28.9784'  '41.0082')
        ).

        cells := Vector new.
        cells append: (((TableCell new: 'CITIES AROUND THE WORLD') alignment: #center) columnSpan: 4).
        table rows append: (TableRow new cells: cells).

        cells := Vector new.
        cells append: ((TableCell new: 'CITY') alignment: #center).
        cells append: ((TableCell new: 'COUNTRY') alignment: #center).
        cells append: ((TableCell new: 'LONGITUDE') alignment: #center).
        cells append: ((TableCell new: 'LATITUDE') alignment: #center).
        table rows append: (TableRow new cells: cells).

        1 to: data length do: [ :index |
            | entry |
            entry := data at: index.

            cells := Vector new.
            cells append: (TableCell new: (entry at: 1)).
            cells append: ((TableCell new: (entry at: 2)) alignment: #center).
            cells append: ((TableCell new: (entry at: 3)) alignment: #right).
            cells append: ((TableCell new: (entry at: 4)) alignment: #right).
            table rows append: (TableRow new cells: cells).

            index = 1 ifFalse: [ table rows last hasTopBorder: false ].
        ].

        table render println.
    )
)
